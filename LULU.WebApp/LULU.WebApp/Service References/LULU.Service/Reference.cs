//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LULU.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.IStudent")]
    public interface IStudent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/CreateStudent", ReplyAction="http://tempuri.org/IStudent/CreateStudentResponse")]
        bool CreateStudent(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/CreateStudent", ReplyAction="http://tempuri.org/IStudent/CreateStudentResponse")]
        System.Threading.Tasks.Task<bool> CreateStudentAsync(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/DeleteStudent", ReplyAction="http://tempuri.org/IStudent/DeleteStudentResponse")]
        bool DeleteStudent(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/DeleteStudent", ReplyAction="http://tempuri.org/IStudent/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/UpdateStudent", ReplyAction="http://tempuri.org/IStudent/UpdateStudentResponse")]
        bool UpdateStudent(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/UpdateStudent", ReplyAction="http://tempuri.org/IStudent/UpdateStudentResponse")]
        System.Threading.Tasks.Task<bool> UpdateStudentAsync(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetAllStudents", ReplyAction="http://tempuri.org/IStudent/GetAllStudentsResponse")]
        string GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetAllStudents", ReplyAction="http://tempuri.org/IStudent/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<string> GetAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentByUserID", ReplyAction="http://tempuri.org/IStudent/GetStudentByUserIDResponse")]
        string GetStudentByUserID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentByUserID", ReplyAction="http://tempuri.org/IStudent/GetStudentByUserIDResponse")]
        System.Threading.Tasks.Task<string> GetStudentByUserIDAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentByStudentNumber", ReplyAction="http://tempuri.org/IStudent/GetStudentByStudentNumberResponse")]
        string GetStudentByStudentNumber(string studentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentByStudentNumber", ReplyAction="http://tempuri.org/IStudent/GetStudentByStudentNumberResponse")]
        System.Threading.Tasks.Task<string> GetStudentByStudentNumberAsync(string studentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentsByFirstName", ReplyAction="http://tempuri.org/IStudent/SearchStudentsByFirstNameResponse")]
        string SearchStudentsByFirstName(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentsByFirstName", ReplyAction="http://tempuri.org/IStudent/SearchStudentsByFirstNameResponse")]
        System.Threading.Tasks.Task<string> SearchStudentsByFirstNameAsync(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentsBySurname", ReplyAction="http://tempuri.org/IStudent/SearchStudentsBySurnameResponse")]
        string SearchStudentsBySurname(string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentsBySurname", ReplyAction="http://tempuri.org/IStudent/SearchStudentsBySurnameResponse")]
        System.Threading.Tasks.Task<string> SearchStudentsBySurnameAsync(string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentByStudentNumber", ReplyAction="http://tempuri.org/IStudent/SearchStudentByStudentNumberResponse")]
        string SearchStudentByStudentNumber(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/SearchStudentByStudentNumber", ReplyAction="http://tempuri.org/IStudent/SearchStudentByStudentNumberResponse")]
        System.Threading.Tasks.Task<string> SearchStudentByStudentNumberAsync(string studentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/LoginStudent", ReplyAction="http://tempuri.org/IStudent/LoginStudentResponse")]
        bool LoginStudent(string studentNumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/LoginStudent", ReplyAction="http://tempuri.org/IStudent/LoginStudentResponse")]
        System.Threading.Tasks.Task<bool> LoginStudentAsync(string studentNumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/StudentAttendedClass", ReplyAction="http://tempuri.org/IStudent/StudentAttendedClassResponse")]
        bool StudentAttendedClass(string studentNumber, int classID, string loginString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/StudentAttendedClass", ReplyAction="http://tempuri.org/IStudent/StudentAttendedClassResponse")]
        System.Threading.Tasks.Task<bool> StudentAttendedClassAsync(string studentNumber, int classID, string loginString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentChannel : LULU.Service.IStudent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentClient : System.ServiceModel.ClientBase<LULU.Service.IStudent>, LULU.Service.IStudent {
        
        public StudentClient() {
        }
        
        public StudentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateStudent(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.CreateStudent(studentNumber, firstName, surname, email, password);
        }
        
        public System.Threading.Tasks.Task<bool> CreateStudentAsync(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.CreateStudentAsync(studentNumber, firstName, surname, email, password);
        }
        
        public bool DeleteStudent(string studentNumber) {
            return base.Channel.DeleteStudent(studentNumber);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(string studentNumber) {
            return base.Channel.DeleteStudentAsync(studentNumber);
        }
        
        public bool UpdateStudent(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.UpdateStudent(studentNumber, firstName, surname, email, password);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStudentAsync(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.UpdateStudentAsync(studentNumber, firstName, surname, email, password);
        }
        
        public string GetAllStudents() {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<string> GetAllStudentsAsync() {
            return base.Channel.GetAllStudentsAsync();
        }
        
        public string GetStudentByUserID(int userID) {
            return base.Channel.GetStudentByUserID(userID);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentByUserIDAsync(int userID) {
            return base.Channel.GetStudentByUserIDAsync(userID);
        }
        
        public string GetStudentByStudentNumber(string studentNUmber) {
            return base.Channel.GetStudentByStudentNumber(studentNUmber);
        }
        
        public System.Threading.Tasks.Task<string> GetStudentByStudentNumberAsync(string studentNUmber) {
            return base.Channel.GetStudentByStudentNumberAsync(studentNUmber);
        }
        
        public string SearchStudentsByFirstName(string firstName) {
            return base.Channel.SearchStudentsByFirstName(firstName);
        }
        
        public System.Threading.Tasks.Task<string> SearchStudentsByFirstNameAsync(string firstName) {
            return base.Channel.SearchStudentsByFirstNameAsync(firstName);
        }
        
        public string SearchStudentsBySurname(string surname) {
            return base.Channel.SearchStudentsBySurname(surname);
        }
        
        public System.Threading.Tasks.Task<string> SearchStudentsBySurnameAsync(string surname) {
            return base.Channel.SearchStudentsBySurnameAsync(surname);
        }
        
        public string SearchStudentByStudentNumber(string studentNumber) {
            return base.Channel.SearchStudentByStudentNumber(studentNumber);
        }
        
        public System.Threading.Tasks.Task<string> SearchStudentByStudentNumberAsync(string studentNumber) {
            return base.Channel.SearchStudentByStudentNumberAsync(studentNumber);
        }
        
        public bool LoginStudent(string studentNumber, string password) {
            return base.Channel.LoginStudent(studentNumber, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginStudentAsync(string studentNumber, string password) {
            return base.Channel.LoginStudentAsync(studentNumber, password);
        }
        
        public bool StudentAttendedClass(string studentNumber, int classID, string loginString) {
            return base.Channel.StudentAttendedClass(studentNumber, classID, loginString);
        }
        
        public System.Threading.Tasks.Task<bool> StudentAttendedClassAsync(string studentNumber, int classID, string loginString) {
            return base.Channel.StudentAttendedClassAsync(studentNumber, classID, loginString);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.ICampus")]
    public interface ICampus {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/AddCampus", ReplyAction="http://tempuri.org/ICampus/AddCampusResponse")]
        bool AddCampus(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/AddCampus", ReplyAction="http://tempuri.org/ICampus/AddCampusResponse")]
        System.Threading.Tasks.Task<bool> AddCampusAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/DeleteCampus", ReplyAction="http://tempuri.org/ICampus/DeleteCampusResponse")]
        bool DeleteCampus(int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/DeleteCampus", ReplyAction="http://tempuri.org/ICampus/DeleteCampusResponse")]
        System.Threading.Tasks.Task<bool> DeleteCampusAsync(int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/GetAllCampuses", ReplyAction="http://tempuri.org/ICampus/GetAllCampusesResponse")]
        string GetAllCampuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/GetAllCampuses", ReplyAction="http://tempuri.org/ICampus/GetAllCampusesResponse")]
        System.Threading.Tasks.Task<string> GetAllCampusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/GetCampusByClassroom", ReplyAction="http://tempuri.org/ICampus/GetCampusByClassroomResponse")]
        string GetCampusByClassroom(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampus/GetCampusByClassroom", ReplyAction="http://tempuri.org/ICampus/GetCampusByClassroomResponse")]
        System.Threading.Tasks.Task<string> GetCampusByClassroomAsync(int classroomID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICampusChannel : LULU.Service.ICampus, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampusClient : System.ServiceModel.ClientBase<LULU.Service.ICampus>, LULU.Service.ICampus {
        
        public CampusClient() {
        }
        
        public CampusClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CampusClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCampus(string name) {
            return base.Channel.AddCampus(name);
        }
        
        public System.Threading.Tasks.Task<bool> AddCampusAsync(string name) {
            return base.Channel.AddCampusAsync(name);
        }
        
        public bool DeleteCampus(int campusID) {
            return base.Channel.DeleteCampus(campusID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCampusAsync(int campusID) {
            return base.Channel.DeleteCampusAsync(campusID);
        }
        
        public string GetAllCampuses() {
            return base.Channel.GetAllCampuses();
        }
        
        public System.Threading.Tasks.Task<string> GetAllCampusesAsync() {
            return base.Channel.GetAllCampusesAsync();
        }
        
        public string GetCampusByClassroom(int classroomID) {
            return base.Channel.GetCampusByClassroom(classroomID);
        }
        
        public System.Threading.Tasks.Task<string> GetCampusByClassroomAsync(int classroomID) {
            return base.Channel.GetCampusByClassroomAsync(classroomID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.IClass")]
    public interface IClass {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/AddClass", ReplyAction="http://tempuri.org/IClass/AddClassResponse")]
        bool AddClass(string newClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/AddClass", ReplyAction="http://tempuri.org/IClass/AddClassResponse")]
        System.Threading.Tasks.Task<bool> AddClassAsync(string newClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/DeleteClass", ReplyAction="http://tempuri.org/IClass/DeleteClassResponse")]
        bool DeleteClass(int classID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/DeleteClass", ReplyAction="http://tempuri.org/IClass/DeleteClassResponse")]
        System.Threading.Tasks.Task<bool> DeleteClassAsync(int classID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/UpdateClass", ReplyAction="http://tempuri.org/IClass/UpdateClassResponse")]
        bool UpdateClass(string updatedClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/UpdateClass", ReplyAction="http://tempuri.org/IClass/UpdateClassResponse")]
        System.Threading.Tasks.Task<bool> UpdateClassAsync(string updatedClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClasses", ReplyAction="http://tempuri.org/IClass/GetAllClassesResponse")]
        string GetAllClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClasses", ReplyAction="http://tempuri.org/IClass/GetAllClassesResponse")]
        System.Threading.Tasks.Task<string> GetAllClassesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByCourse", ReplyAction="http://tempuri.org/IClass/GetAllClassesByCourseResponse")]
        string GetAllClassesByCourse(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByCourse", ReplyAction="http://tempuri.org/IClass/GetAllClassesByCourseResponse")]
        System.Threading.Tasks.Task<string> GetAllClassesByCourseAsync(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByDate", ReplyAction="http://tempuri.org/IClass/GetAllClassesByDateResponse")]
        string GetAllClassesByDate(System.DateTime classDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByDate", ReplyAction="http://tempuri.org/IClass/GetAllClassesByDateResponse")]
        System.Threading.Tasks.Task<string> GetAllClassesByDateAsync(System.DateTime classDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByClassroom", ReplyAction="http://tempuri.org/IClass/GetAllClassesByClassroomResponse")]
        string GetAllClassesByClassroom(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAllClassesByClassroom", ReplyAction="http://tempuri.org/IClass/GetAllClassesByClassroomResponse")]
        System.Threading.Tasks.Task<string> GetAllClassesByClassroomAsync(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetClassesByName", ReplyAction="http://tempuri.org/IClass/GetClassesByNameResponse")]
        string GetClassesByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetClassesByName", ReplyAction="http://tempuri.org/IClass/GetClassesByNameResponse")]
        System.Threading.Tasks.Task<string> GetClassesByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetClassesByStudentNumberAndDateRangeResponse")]
        string GetClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate, bool includeAttendedClasses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetClassesByStudentNumberAndDateRangeResponse")]
        System.Threading.Tasks.Task<string> GetClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate, bool includeAttendedClasses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAttendedClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetAttendedClassesByStudentNumberAndDateRangeResponse")]
        string GetAttendedClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetAttendedClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetAttendedClassesByStudentNumberAndDateRangeResponse")]
        System.Threading.Tasks.Task<string> GetAttendedClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetMissedClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetMissedClassesByStudentNumberAndDateRangeResponse")]
        string GetMissedClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClass/GetMissedClassesByStudentNumberAndDateRange", ReplyAction="http://tempuri.org/IClass/GetMissedClassesByStudentNumberAndDateRangeResponse")]
        System.Threading.Tasks.Task<string> GetMissedClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClassChannel : LULU.Service.IClass, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClassClient : System.ServiceModel.ClientBase<LULU.Service.IClass>, LULU.Service.IClass {
        
        public ClassClient() {
        }
        
        public ClassClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClassClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddClass(string newClass) {
            return base.Channel.AddClass(newClass);
        }
        
        public System.Threading.Tasks.Task<bool> AddClassAsync(string newClass) {
            return base.Channel.AddClassAsync(newClass);
        }
        
        public bool DeleteClass(int classID) {
            return base.Channel.DeleteClass(classID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClassAsync(int classID) {
            return base.Channel.DeleteClassAsync(classID);
        }
        
        public bool UpdateClass(string updatedClass) {
            return base.Channel.UpdateClass(updatedClass);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClassAsync(string updatedClass) {
            return base.Channel.UpdateClassAsync(updatedClass);
        }
        
        public string GetAllClasses() {
            return base.Channel.GetAllClasses();
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassesAsync() {
            return base.Channel.GetAllClassesAsync();
        }
        
        public string GetAllClassesByCourse(int courseID) {
            return base.Channel.GetAllClassesByCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassesByCourseAsync(int courseID) {
            return base.Channel.GetAllClassesByCourseAsync(courseID);
        }
        
        public string GetAllClassesByDate(System.DateTime classDate) {
            return base.Channel.GetAllClassesByDate(classDate);
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassesByDateAsync(System.DateTime classDate) {
            return base.Channel.GetAllClassesByDateAsync(classDate);
        }
        
        public string GetAllClassesByClassroom(int classroomID) {
            return base.Channel.GetAllClassesByClassroom(classroomID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassesByClassroomAsync(int classroomID) {
            return base.Channel.GetAllClassesByClassroomAsync(classroomID);
        }
        
        public string GetClassesByName(string name) {
            return base.Channel.GetClassesByName(name);
        }
        
        public System.Threading.Tasks.Task<string> GetClassesByNameAsync(string name) {
            return base.Channel.GetClassesByNameAsync(name);
        }
        
        public string GetClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate, bool includeAttendedClasses) {
            return base.Channel.GetClassesByStudentNumberAndDateRange(studentNumber, startDate, endDate, includeAttendedClasses);
        }
        
        public System.Threading.Tasks.Task<string> GetClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate, bool includeAttendedClasses) {
            return base.Channel.GetClassesByStudentNumberAndDateRangeAsync(studentNumber, startDate, endDate, includeAttendedClasses);
        }
        
        public string GetAttendedClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAttendedClassesByStudentNumberAndDateRange(studentNumber, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<string> GetAttendedClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAttendedClassesByStudentNumberAndDateRangeAsync(studentNumber, startDate, endDate);
        }
        
        public string GetMissedClassesByStudentNumberAndDateRange(string studentNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetMissedClassesByStudentNumberAndDateRange(studentNumber, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<string> GetMissedClassesByStudentNumberAndDateRangeAsync(string studentNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetMissedClassesByStudentNumberAndDateRangeAsync(studentNumber, startDate, endDate);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.IClassRoom")]
    public interface IClassRoom {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/AddClassRoom", ReplyAction="http://tempuri.org/IClassRoom/AddClassRoomResponse")]
        bool AddClassRoom(string name, decimal longitude, decimal latitude, int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/AddClassRoom", ReplyAction="http://tempuri.org/IClassRoom/AddClassRoomResponse")]
        System.Threading.Tasks.Task<bool> AddClassRoomAsync(string name, decimal longitude, decimal latitude, int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/DeleteClassRoom", ReplyAction="http://tempuri.org/IClassRoom/DeleteClassRoomResponse")]
        bool DeleteClassRoom(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/DeleteClassRoom", ReplyAction="http://tempuri.org/IClassRoom/DeleteClassRoomResponse")]
        System.Threading.Tasks.Task<bool> DeleteClassRoomAsync(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/UpdateClassRoom", ReplyAction="http://tempuri.org/IClassRoom/UpdateClassRoomResponse")]
        bool UpdateClassRoom(string classRoomString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/UpdateClassRoom", ReplyAction="http://tempuri.org/IClassRoom/UpdateClassRoomResponse")]
        System.Threading.Tasks.Task<bool> UpdateClassRoomAsync(string classRoomString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetAllClassRooms", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsResponse")]
        string GetAllClassRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetAllClassRooms", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsResponse")]
        System.Threading.Tasks.Task<string> GetAllClassRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampus", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampusResponse")]
        string GetAllClassRoomsByCampus(int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampus", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampusResponse")]
        System.Threading.Tasks.Task<string> GetAllClassRoomsByCampusAsync(int campusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetClassRoomByID", ReplyAction="http://tempuri.org/IClassRoom/GetClassRoomByIDResponse")]
        string GetClassRoomByID(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetClassRoomByID", ReplyAction="http://tempuri.org/IClassRoom/GetClassRoomByIDResponse")]
        System.Threading.Tasks.Task<string> GetClassRoomByIDAsync(int classroomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetClassRoomByClassID", ReplyAction="http://tempuri.org/IClassRoom/GetClassRoomByClassIDResponse")]
        string GetClassRoomByClassID(int classID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassRoom/GetClassRoomByClassID", ReplyAction="http://tempuri.org/IClassRoom/GetClassRoomByClassIDResponse")]
        System.Threading.Tasks.Task<string> GetClassRoomByClassIDAsync(int classID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClassRoomChannel : LULU.Service.IClassRoom, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClassRoomClient : System.ServiceModel.ClientBase<LULU.Service.IClassRoom>, LULU.Service.IClassRoom {
        
        public ClassRoomClient() {
        }
        
        public ClassRoomClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClassRoomClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassRoomClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassRoomClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddClassRoom(string name, decimal longitude, decimal latitude, int campusID) {
            return base.Channel.AddClassRoom(name, longitude, latitude, campusID);
        }
        
        public System.Threading.Tasks.Task<bool> AddClassRoomAsync(string name, decimal longitude, decimal latitude, int campusID) {
            return base.Channel.AddClassRoomAsync(name, longitude, latitude, campusID);
        }
        
        public bool DeleteClassRoom(int classroomID) {
            return base.Channel.DeleteClassRoom(classroomID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClassRoomAsync(int classroomID) {
            return base.Channel.DeleteClassRoomAsync(classroomID);
        }
        
        public bool UpdateClassRoom(string classRoomString) {
            return base.Channel.UpdateClassRoom(classRoomString);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClassRoomAsync(string classRoomString) {
            return base.Channel.UpdateClassRoomAsync(classRoomString);
        }
        
        public string GetAllClassRooms() {
            return base.Channel.GetAllClassRooms();
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassRoomsAsync() {
            return base.Channel.GetAllClassRoomsAsync();
        }
        
        public string GetAllClassRoomsByCampus(int campusID) {
            return base.Channel.GetAllClassRoomsByCampus(campusID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllClassRoomsByCampusAsync(int campusID) {
            return base.Channel.GetAllClassRoomsByCampusAsync(campusID);
        }
        
        public string GetClassRoomByID(int classroomID) {
            return base.Channel.GetClassRoomByID(classroomID);
        }
        
        public System.Threading.Tasks.Task<string> GetClassRoomByIDAsync(int classroomID) {
            return base.Channel.GetClassRoomByIDAsync(classroomID);
        }
        
        public string GetClassRoomByClassID(int classID) {
            return base.Channel.GetClassRoomByClassID(classID);
        }
        
        public System.Threading.Tasks.Task<string> GetClassRoomByClassIDAsync(int classID) {
            return base.Channel.GetClassRoomByClassIDAsync(classID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.ICourse")]
    public interface ICourse {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/AddCourse", ReplyAction="http://tempuri.org/ICourse/AddCourseResponse")]
        bool AddCourse(string courseCode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/AddCourse", ReplyAction="http://tempuri.org/ICourse/AddCourseResponse")]
        System.Threading.Tasks.Task<bool> AddCourseAsync(string courseCode, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/DeleteCourse", ReplyAction="http://tempuri.org/ICourse/DeleteCourseResponse")]
        bool DeleteCourse(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/DeleteCourse", ReplyAction="http://tempuri.org/ICourse/DeleteCourseResponse")]
        System.Threading.Tasks.Task<bool> DeleteCourseAsync(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/UpdateCourse", ReplyAction="http://tempuri.org/ICourse/UpdateCourseResponse")]
        bool UpdateCourse(string courseString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/UpdateCourse", ReplyAction="http://tempuri.org/ICourse/UpdateCourseResponse")]
        System.Threading.Tasks.Task<bool> UpdateCourseAsync(string courseString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetAllCourses", ReplyAction="http://tempuri.org/ICourse/GetAllCoursesResponse")]
        string GetAllCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetAllCourses", ReplyAction="http://tempuri.org/ICourse/GetAllCoursesResponse")]
        System.Threading.Tasks.Task<string> GetAllCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetCourseByID", ReplyAction="http://tempuri.org/ICourse/GetCourseByIDResponse")]
        string GetCourseByID(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetCourseByID", ReplyAction="http://tempuri.org/ICourse/GetCourseByIDResponse")]
        System.Threading.Tasks.Task<string> GetCourseByIDAsync(int courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetCourseByCourseCode", ReplyAction="http://tempuri.org/ICourse/GetCourseByCourseCodeResponse")]
        string GetCourseByCourseCode(string courseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourse/GetCourseByCourseCode", ReplyAction="http://tempuri.org/ICourse/GetCourseByCourseCodeResponse")]
        System.Threading.Tasks.Task<string> GetCourseByCourseCodeAsync(string courseCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseChannel : LULU.Service.ICourse, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseClient : System.ServiceModel.ClientBase<LULU.Service.ICourse>, LULU.Service.ICourse {
        
        public CourseClient() {
        }
        
        public CourseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCourse(string courseCode, string name) {
            return base.Channel.AddCourse(courseCode, name);
        }
        
        public System.Threading.Tasks.Task<bool> AddCourseAsync(string courseCode, string name) {
            return base.Channel.AddCourseAsync(courseCode, name);
        }
        
        public bool DeleteCourse(int courseID) {
            return base.Channel.DeleteCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCourseAsync(int courseID) {
            return base.Channel.DeleteCourseAsync(courseID);
        }
        
        public bool UpdateCourse(string courseString) {
            return base.Channel.UpdateCourse(courseString);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCourseAsync(string courseString) {
            return base.Channel.UpdateCourseAsync(courseString);
        }
        
        public string GetAllCourses() {
            return base.Channel.GetAllCourses();
        }
        
        public System.Threading.Tasks.Task<string> GetAllCoursesAsync() {
            return base.Channel.GetAllCoursesAsync();
        }
        
        public string GetCourseByID(int courseID) {
            return base.Channel.GetCourseByID(courseID);
        }
        
        public System.Threading.Tasks.Task<string> GetCourseByIDAsync(int courseID) {
            return base.Channel.GetCourseByIDAsync(courseID);
        }
        
        public string GetCourseByCourseCode(string courseCode) {
            return base.Channel.GetCourseByCourseCode(courseCode);
        }
        
        public System.Threading.Tasks.Task<string> GetCourseByCourseCodeAsync(string courseCode) {
            return base.Channel.GetCourseByCourseCodeAsync(courseCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LULU.Service.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddLecturer", ReplyAction="http://tempuri.org/IUser/AddLecturerResponse")]
        bool AddLecturer(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddLecturer", ReplyAction="http://tempuri.org/IUser/AddLecturerResponse")]
        System.Threading.Tasks.Task<bool> AddLecturerAsync(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddStaffUser", ReplyAction="http://tempuri.org/IUser/AddStaffUserResponse")]
        bool AddStaffUser(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddStaffUser", ReplyAction="http://tempuri.org/IUser/AddStaffUserResponse")]
        System.Threading.Tasks.Task<bool> AddStaffUserAsync(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddStudent", ReplyAction="http://tempuri.org/IUser/AddStudentResponse")]
        bool AddStudent(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddStudent", ReplyAction="http://tempuri.org/IUser/AddStudentResponse")]
        System.Threading.Tasks.Task<bool> AddStudentAsync(string studentNumber, string firstName, string surname, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/DeleteUser", ReplyAction="http://tempuri.org/IUser/DeleteUserResponse")]
        bool DeleteUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/DeleteUser", ReplyAction="http://tempuri.org/IUser/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUser", ReplyAction="http://tempuri.org/IUser/UpdateUserResponse")]
        bool UpdateUser(string userString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUser", ReplyAction="http://tempuri.org/IUser/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(string userString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllUsersOfType", ReplyAction="http://tempuri.org/IUser/GetAllUsersOfTypeResponse")]
        string GetAllUsersOfType(string typeString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAllUsersOfType", ReplyAction="http://tempuri.org/IUser/GetAllUsersOfTypeResponse")]
        System.Threading.Tasks.Task<string> GetAllUsersOfTypeAsync(string typeString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/LoginStaffUser", ReplyAction="http://tempuri.org/IUser/LoginStaffUserResponse")]
        string LoginStaffUser(string staffNumber, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/LoginStaffUser", ReplyAction="http://tempuri.org/IUser/LoginStaffUserResponse")]
        System.Threading.Tasks.Task<string> LoginStaffUserAsync(string staffNumber, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : LULU.Service.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<LULU.Service.IUser>, LULU.Service.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddLecturer(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin) {
            return base.Channel.AddLecturer(title, staffNumber, firstName, surname, email, password, isSysAdmin);
        }
        
        public System.Threading.Tasks.Task<bool> AddLecturerAsync(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin) {
            return base.Channel.AddLecturerAsync(title, staffNumber, firstName, surname, email, password, isSysAdmin);
        }
        
        public bool AddStaffUser(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin) {
            return base.Channel.AddStaffUser(staffNumber, firstName, surname, email, password, isSysAdmin);
        }
        
        public System.Threading.Tasks.Task<bool> AddStaffUserAsync(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin) {
            return base.Channel.AddStaffUserAsync(staffNumber, firstName, surname, email, password, isSysAdmin);
        }
        
        public bool AddStudent(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.AddStudent(studentNumber, firstName, surname, email, password);
        }
        
        public System.Threading.Tasks.Task<bool> AddStudentAsync(string studentNumber, string firstName, string surname, string email, string password) {
            return base.Channel.AddStudentAsync(studentNumber, firstName, surname, email, password);
        }
        
        public bool DeleteUser(int userID) {
            return base.Channel.DeleteUser(userID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userID) {
            return base.Channel.DeleteUserAsync(userID);
        }
        
        public bool UpdateUser(string userString) {
            return base.Channel.UpdateUser(userString);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(string userString) {
            return base.Channel.UpdateUserAsync(userString);
        }
        
        public string GetAllUsersOfType(string typeString) {
            return base.Channel.GetAllUsersOfType(typeString);
        }
        
        public System.Threading.Tasks.Task<string> GetAllUsersOfTypeAsync(string typeString) {
            return base.Channel.GetAllUsersOfTypeAsync(typeString);
        }
        
        public string LoginStaffUser(string staffNumber, string password) {
            return base.Channel.LoginStaffUser(staffNumber, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginStaffUserAsync(string staffNumber, string password) {
            return base.Channel.LoginStaffUserAsync(staffNumber, password);
        }
    }
}
